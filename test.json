[{
	"issue_title": "DisabledinputstillclickableinIE11",
	"issue_status": ["Component: DOM", "Difficulty: starter"],
	"release_features_and_fixes": ["Removed extraneous files from npm package. (", " in ", ")", "Ensure ", " is only called once. (", " in ", ")", "Fixed bug resulting in disabled buttons responding to mouse events in IE. (", " in ", ")", "Ensure ", "s are correctly selected when inside ", ". (", " in ", ")", "Restore support for rendering into a shadow root. (", " in ", ")", "Ensure nested ", " elements are caught when warning for invalid markup. (", " in ", ")", "Improve warning when encountering multiple elements with the same key. (", " in ", ")", "Ensure that functional components do not have an owner. (", " in ", ")", "Handle invalid arguments to ", " better. (", " in ", ")", "Ignore DOM operations that occur outside the batch operation. (", " in ", ")", "These files are now shipped inside the React npm package. They have no impact on React core or ReactDOM."],
	"time_difference": 15.251550925925926,
	"release_tag": "v15.0.2"
}, {
	"issue_title": "enqueueCallbackinvariantshouldspecify/identifyactualobjectinfailuremessage",
	"issue_status": ["Difficulty: starter"],
	"release_features_and_fixes": [" Previously we would generate a large string of HTML and then set ", ". At the time, this was decided to be faster than using ", " for the majority of cases and browsers that we supported. Browsers have continued to improve and so overwhelmingly this is no longer true. By using ", " we can make other parts of React faster. (", " in ", ")", " As a result of using ", ", we can prime the node cache as we create DOM nodes, allowing us to skip a potential lookup (which used the ", " attribute). Root nodes will have a ", " attribute and server generated markup will still contain ", ". (", " in ", ")", " ReactDOM will now render plain text nodes interspersed with comment nodes that are used for demarcation. This gives us the same ability to update individual pieces of text, without creating extra nested nodes. If you were targeting these ", "s in your CSS, you will need to adjust accordingly. You can always render them explicitly in your components. (", " in ", ")", " Previously ", " would render to ", " elements. We now use comment nodes. This may cause issues if making use of ", " CSS selectors. While we consider this rendering behavior an implementation detail of React, it's worth noting the potential problem. ()", " in ", ")", " We added support for ", " in React 0.14. However, React 0.14 still allowed you to define a class component without extending ", " or using ", ", so ", ", and did not allow returning ", " from it. This issue is solved in React 15, and you can now return ", " from any component, whether it is a class or a function. (", " in ", ")", " All SVG tags are now fully supported. (Uncommon SVG tags are not present on the ", " element helper, but JSX and ", " work on all tag names.) All SVG attributes that are implemented by the browsers should be supported too. If you find any attributes that we have missed, please ", ". (", " in ", ")", " We fixed a bug in ", " that some components may rely on. If some of the ", " received by ", " are ", ", it used to return an element with ", " values for those props. We\u2019re changing it to be consistent with ", ". Now any ", " props passed to ", " are resolved to the corresponding component\u2019s ", ". (", " in ", ")", " This change won\u2019t affect applications but may break some third-party tools. We are ", " and plan to release it during the 15.x cycle. The internal performance measurement format is subject to change so, for the time being, we consider the return value of ", " an opaque data structure that should not be relied upon. (", " in ", ")", "Deprecated APIs are removed from the ", " top-level export: ", ", ", ", ", ", ", ", and ", ". As a reminder, they are now available on ", " and ", ". (", " in ", ")", "Deprecated addons are removed: ", " and ", ". (", " in ", ", ", " in ", ")", "Deprecated component instance methods are removed: ", ", ", ", and ", ". (", " in ", ")", "Deprecated CommonJS ", " entry point is removed. As a reminder, you should use separate ", " packages instead. This only applies if you use the CommonJS builds. (", " in ", ")", "Passing ", " to void elements like ", " was deprecated, and now throws an error. (", " in ", ")", "React-specific properties on DOM ", " (e.g. ", ") were deprecated, and are removed now. (", " in ", ")", " and ", " are now deprecated due to very low popularity. If you need this, you can use a wrapper component that implements the same behavior: ", ". (", " in ", ")", "Future versions of React will treat ", " as a request to clear the input. However, React 0.14 has been ignoring ", ". React 15 warns you on a ", " input value and offers you to clarify your intention. To fix the warning, you may explicitly pass an empty string to clear a controlled input, or pass ", " to make the input uncontrolled. (", " in ", ")", " was renamed to ", ", and ", " was renamed to ", ". (", " in ", ")", "If you use a minified copy of the ", " build, React DOM kindly encourages you to use the faster production build instead. (", " in ", ")", "React DOM: When specifying a unit-less CSS value as a string, a future version will not add ", " automatically. This version now warns in this case (ex: writing ", ". Unitless ", " values like ", " are unchanged. (", " in ", ")", "Synthetic Events will now warn when setting and accessing properties (which will not get cleared appropriately), as well as warn on access after an event has been returned to the pool. (", " in ", " and ", " in ", ")", "Elements will now warn when attempting to read ", " and ", " from the props. (", " in ", ")", "React will now warn if you pass a different ", " object to ", " in the constructor. (", " in ", ")", "React will now warn if you call ", " inside ", ". (", " in ", ")", "React DOM now attempts to warn for mistyped event handlers on DOM elements, such as ", " which should be ", ". (", " in ", ")", "React DOM now warns about ", " values in ", ". (", " in ", ")", "React DOM now warns if you specify both ", " and ", " for an input. (", " in ", ")", "React DOM now warns if an input switches between being controlled and uncontrolled. (", " in ", ")", "React DOM now warns if you specify ", " or ", " handlers as they are unnecessary in React. (", " in ", ")", "React now prints a descriptive error message when you pass an invalid callback as the last argument to ", ", ", ", or ", ". (", " in ", " and ", " in ", ")", "Add-Ons: ", " now prints a helpful message if you attempt to use it with shallow rendering. (", " in ", ")", "PropTypes: ", " and ", " provide better error messages for invalid arguments. (", " in ", ")", "Fixed multiple small memory leaks. (", " in ", " and ", " in ", ")", "Input events are handled more reliably in IE 10 and IE 11; spurious events no longer fire when using a placeholder. (", " in ", ")", "The ", " lifecycle method is now consistently called when ", " changes. (", " in ", ")", " doesn\u2019t append slash to an existing ", " when used inside ", ". (", " in ", ")", "React DOM now supports the ", " and ", " HTML attributes. (", " in ", " and ", " in ", ")", "React DOM now supports ", ", ", " and ", " CSS properties. (", " in ", " and  ", " in ", ")", "React DOM now correctly handles ", ", ", ", ", ", ", ", ", ", and ", " as unitless CSS properties. (", " in ", " and ", ")", "React DOM now supports the ", ", ", ", ", ", ", ", and ", " events. Support for ", " has been added to ", " elements. (", " in ", ",  ", " in ", ", and ", " in ", ")", "React DOM now defaults to using DOM attributes instead of properties, which fixes a few edge case bugs. Additionally the nullification of values (ex: ", ") now results in the forceful removal, no longer trying to set to the default value used by browsers in the absence of a value. (", " in ", ")", "React DOM does not mistakingly coerce ", " to strings for Web Components. (", " in ", ")", "React DOM now correctly normalizes SVG ", " events. (", " in ", ")", "React DOM does not throw if a ", " is unmounted while its ", " handler is executing. (", " in ", ")", "React DOM does not throw in Windows 8 apps. (", " in ", ")", "React DOM does not throw when asynchronously unmounting a child with a ", ". (", " in ", ")", "React DOM no longer forces synchronous layout because of scroll position tracking. (", " in ", ")", " is used in a number of places to compare values, which leads to fewer false positives, especially involving ", ". In particular, this affects the ", " add-on. (", " in ", ")", "Add-Ons: ReactPerf no longer instruments adding or removing an event listener because they don\u2019t really touch the DOM due to event delegation. (", " in ", ")", "React now uses ", " instead of ", " so it installs less transitive dependencies. (", " in ", ")", "Shallow renderer now exposes ", ". (", " in ", ")", "Shallow renderer now returns the rendered output from ", ". (", " in ", ")", "React no longer depends on ES5 ", " for ", " and ", " in older environments. It still, however, requires ES5 ", " in those environments. (", " in ", ")", "React DOM now allows ", " attributes with names that start with numbers. (", " in ", ")", "React DOM adds a new ", " prop for components like ", " that intentionally manage ", " children with React. (", " in ", ")", "React improves the performance for ", " on complex specs. (", " in ", ")"],
	"time_difference": 174.9760300925926,
	"release_tag": "v15.0.0"
}, {
	"issue_title": "window.print()crashesifa'print'eventlistenercausesarerender(Chrome,DEV-modeonly)",
	"issue_status": ["Type: Bug"],
	"release_features_and_fixes": ["Add ", " and ", " for the ", ". (", " in ", ")", "Build component stacks from native error frames. (", " in ", ")", "Allow to specify ", " on context for improved stacks. (", " in ", ")", "Prevent ", " from leaking in the UMD bundles. (", " in ", ")", "Stop using ", " for redirects. (", " in ", ")", "Delegate events to roots instead of ", ". (", " in ", " and ", ")", "Clean up all effects before running any next effects. (", " in ", ")", "Run ", " cleanup functions asynchronously. (", " in ", ")", "Use browser ", " and ", " for ", " and ", ". (", " in ", ")", "Make all ", " events use the browser capture phase. (", " in ", ")", "Don't emulate bubbling of the ", " event. (", " in ", ")", "Throw if ", " or ", " component returns ", ". (", " in ", ")", "Remove event pooling. (", " in ", ")", "Stop exposing internals that won\u2019t be needed by React Native Web. (", " in ", ")", "Attach all known event listeners when the root mounts. (", " in ", ")", "Disable ", " in the second render pass of DEV mode double render. (", " in ", ")", "Deprecate the undocumented and misleading ", " API. (", " in ", ")", "Rename private field names used in the internals. (", " in ", ")", "Don't call User Timing API in development. (", " in ", ")", "Disable console during the repeated render in Strict Mode. (", " in ", ")", "In Strict Mode, double-render components without Hooks too. (", " in ", ")", "Allow calling ", " during lifecycle methods (but warn). (", " in ", ")", "Add the ", " property to the keyboard event objects. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Warn when no ", " is provided to ", ". (", " in ", ")", "Warn when ", " or ", " components return ", ". (", " in ", ")", "Improve the error message for invalid updates. (", " in ", ")", "Exclude forwardRef and memo from stack frames. (", " in ", ")", "Improve the error message when switching between controlled and uncontrolled inputs. (", " in ", ")", "Keep ", ", ", ", and ", " passive. (", " in ", ")", "Fix ", " hanging in development inside a closed iframe. (", " in ", ")", "Fix rendering bailout for lazy components with ", ". (", " in ", ")", "Fix a false positive warning when ", " is ", ". (", " in ", ")", "Fix Test Utils with non-standard ", " implementation. (", " in ", ")", "Fix ", " reporting an incorrect ", ". (", " in ", ")", "Fix ", " reported as ", " in Firefox. (", " in ", ")", "Fix \"unspecified error\" in IE11. (", " in ", ")", "Fix rendering into a shadow root. (", " in ", ")", "Fix ", " polyfill with capture events. (", " in ", ")", "Use delegation for ", " and ", " events. (", " in ", ")", "Improve memory usage. (", " in ", ")", "Make ", " behavior consistent with ", " for the server renderer. (", " in ", ")", "Fix state leaking when a function component throws. (", " in ", ")", "Improve ", " error message. (", " in ", ")", "Revamp the priority batching heuristics. (", " in ", ")", "Add the ", " prefix before the experimental APIs. (", " in ", ")", "Remove ", " and ", ". (", " in ", ")", "Remove the ", " argument. (", " in ", ")", "Disable ", " prerendering in favor of a different future API. (", " in ", ")", "Add ", " to Suspense for CPU-bound trees. (", " in ", ")", "Add an experimental ", " Hook. (", " in ", ")", "Add an experimental ", " API. (", " in ", ")", "Using ", " in the test renderer no longer flushes Suspense fallbacks. (", " in ", ")", "Use global render timeout for CPU Suspense. (", " in ", ")", "Clear the existing root content before mounting. (", " in ", ")", "Fix a bug with error boundaries. (", " in ", ")", "Fix a bug causing dropped updates in a suspended tree. (", " in ", " and ", ")", "Fix a bug causing dropped render phase updates. (", " in ", ")", "Fix a bug in SuspenseList. (", " in ", ")", "Fix a bug causing Suspense fallback to show too early. (", " in ", ")", "Fix a bug with class components inside SuspenseList. (", " in ", ")", "Fix a bug with inputs that may cause updates to be dropped. (", " in ", " and ", " in ", ")", "Fix a bug causing Suspense fallback to get stuck.  (", " in ", ")", "Don't cut off the tail of a SuspenseList if hydrating. (", " in ", ")", "Fix a bug in ", " that may happen when ", " changes. (", " in ", ")", "Fix a tearing bug in ", ". (", " in ", ")", "Warn if calling setState outside of render but before commit. (", " in ", ")", "react: ", "react-art: ", "react-dom: ", "react-is: ", "react-test-renderer: ", "scheduler: "],
	"time_difference": 111.25811342592593,
	"release_tag": "17.0.0 (October 20, 2020)"
}, {
	"issue_title": "Changingplaceholderon<input>causesonChangeinIE",
	"issue_status": [],
	"release_features_and_fixes": [" Previously we would generate a large string of HTML and then set ", ". At the time, this was decided to be faster than using ", " for the majority of cases and browsers that we supported. Browsers have continued to improve and so overwhelmingly this is no longer true. By using ", " we can make other parts of React faster. (", " in ", ")", " As a result of using ", ", we can prime the node cache as we create DOM nodes, allowing us to skip a potential lookup (which used the ", " attribute). Root nodes will have a ", " attribute and server generated markup will still contain ", ". (", " in ", ")", " ReactDOM will now render plain text nodes interspersed with comment nodes that are used for demarcation. This gives us the same ability to update individual pieces of text, without creating extra nested nodes. If you were targeting these ", "s in your CSS, you will need to adjust accordingly. You can always render them explicitly in your components. (", " in ", ")", " Previously ", " would render to ", " elements. We now use comment nodes. This may cause issues if making use of ", " CSS selectors. While we consider this rendering behavior an implementation detail of React, it's worth noting the potential problem. ()", " in ", ")", " We added support for ", " in React 0.14. However, React 0.14 still allowed you to define a class component without extending ", " or using ", ", so ", ", and did not allow returning ", " from it. This issue is solved in React 15, and you can now return ", " from any component, whether it is a class or a function. (", " in ", ")", " All SVG tags are now fully supported. (Uncommon SVG tags are not present on the ", " element helper, but JSX and ", " work on all tag names.) All SVG attributes that are implemented by the browsers should be supported too. If you find any attributes that we have missed, please ", ". (", " in ", ")", " We fixed a bug in ", " that some components may rely on. If some of the ", " received by ", " are ", ", it used to return an element with ", " values for those props. We\u2019re changing it to be consistent with ", ". Now any ", " props passed to ", " are resolved to the corresponding component\u2019s ", ". (", " in ", ")", " This change won\u2019t affect applications but may break some third-party tools. We are ", " and plan to release it during the 15.x cycle. The internal performance measurement format is subject to change so, for the time being, we consider the return value of ", " an opaque data structure that should not be relied upon. (", " in ", ")", "Deprecated APIs are removed from the ", " top-level export: ", ", ", ", ", ", ", ", and ", ". As a reminder, they are now available on ", " and ", ". (", " in ", ")", "Deprecated addons are removed: ", " and ", ". (", " in ", ", ", " in ", ")", "Deprecated component instance methods are removed: ", ", ", ", and ", ". (", " in ", ")", "Deprecated CommonJS ", " entry point is removed. As a reminder, you should use separate ", " packages instead. This only applies if you use the CommonJS builds. (", " in ", ")", "Passing ", " to void elements like ", " was deprecated, and now throws an error. (", " in ", ")", "React-specific properties on DOM ", " (e.g. ", ") were deprecated, and are removed now. (", " in ", ")", " and ", " are now deprecated due to very low popularity. If you need this, you can use a wrapper component that implements the same behavior: ", ". (", " in ", ")", "Future versions of React will treat ", " as a request to clear the input. However, React 0.14 has been ignoring ", ". React 15 warns you on a ", " input value and offers you to clarify your intention. To fix the warning, you may explicitly pass an empty string to clear a controlled input, or pass ", " to make the input uncontrolled. (", " in ", ")", " was renamed to ", ", and ", " was renamed to ", ". (", " in ", ")", "If you use a minified copy of the ", " build, React DOM kindly encourages you to use the faster production build instead. (", " in ", ")", "React DOM: When specifying a unit-less CSS value as a string, a future version will not add ", " automatically. This version now warns in this case (ex: writing ", ". Unitless ", " values like ", " are unchanged. (", " in ", ")", "Synthetic Events will now warn when setting and accessing properties (which will not get cleared appropriately), as well as warn on access after an event has been returned to the pool. (", " in ", " and ", " in ", ")", "Elements will now warn when attempting to read ", " and ", " from the props. (", " in ", ")", "React will now warn if you pass a different ", " object to ", " in the constructor. (", " in ", ")", "React will now warn if you call ", " inside ", ". (", " in ", ")", "React DOM now attempts to warn for mistyped event handlers on DOM elements, such as ", " which should be ", ". (", " in ", ")", "React DOM now warns about ", " values in ", ". (", " in ", ")", "React DOM now warns if you specify both ", " and ", " for an input. (", " in ", ")", "React DOM now warns if an input switches between being controlled and uncontrolled. (", " in ", ")", "React DOM now warns if you specify ", " or ", " handlers as they are unnecessary in React. (", " in ", ")", "React now prints a descriptive error message when you pass an invalid callback as the last argument to ", ", ", ", or ", ". (", " in ", " and ", " in ", ")", "Add-Ons: ", " now prints a helpful message if you attempt to use it with shallow rendering. (", " in ", ")", "PropTypes: ", " and ", " provide better error messages for invalid arguments. (", " in ", ")", "Fixed multiple small memory leaks. (", " in ", " and ", " in ", ")", "Input events are handled more reliably in IE 10 and IE 11; spurious events no longer fire when using a placeholder. (", " in ", ")", "The ", " lifecycle method is now consistently called when ", " changes. (", " in ", ")", " doesn\u2019t append slash to an existing ", " when used inside ", ". (", " in ", ")", "React DOM now supports the ", " and ", " HTML attributes. (", " in ", " and ", " in ", ")", "React DOM now supports ", ", ", " and ", " CSS properties. (", " in ", " and  ", " in ", ")", "React DOM now correctly handles ", ", ", ", ", ", ", ", ", ", and ", " as unitless CSS properties. (", " in ", " and ", ")", "React DOM now supports the ", ", ", ", ", ", ", ", and ", " events. Support for ", " has been added to ", " elements. (", " in ", ",  ", " in ", ", and ", " in ", ")", "React DOM now defaults to using DOM attributes instead of properties, which fixes a few edge case bugs. Additionally the nullification of values (ex: ", ") now results in the forceful removal, no longer trying to set to the default value used by browsers in the absence of a value. (", " in ", ")", "React DOM does not mistakingly coerce ", " to strings for Web Components. (", " in ", ")", "React DOM now correctly normalizes SVG ", " events. (", " in ", ")", "React DOM does not throw if a ", " is unmounted while its ", " handler is executing. (", " in ", ")", "React DOM does not throw in Windows 8 apps. (", " in ", ")", "React DOM does not throw when asynchronously unmounting a child with a ", ". (", " in ", ")", "React DOM no longer forces synchronous layout because of scroll position tracking. (", " in ", ")", " is used in a number of places to compare values, which leads to fewer false positives, especially involving ", ". In particular, this affects the ", " add-on. (", " in ", ")", "Add-Ons: ReactPerf no longer instruments adding or removing an event listener because they don\u2019t really touch the DOM due to event delegation. (", " in ", ")", "React now uses ", " instead of ", " so it installs less transitive dependencies. (", " in ", ")", "Shallow renderer now exposes ", ". (", " in ", ")", "Shallow renderer now returns the rendered output from ", ". (", " in ", ")", "React no longer depends on ES5 ", " for ", " and ", " in older environments. It still, however, requires ES5 ", " in those environments. (", " in ", ")", "React DOM now allows ", " attributes with names that start with numbers. (", " in ", ")", "React DOM adds a new ", " prop for components like ", " that intentionally manage ", " children with React. (", " in ", ")", "React improves the performance for ", " on complex specs. (", " in ", ")"],
	"time_difference": 172.98510416666667,
	"release_tag": "v15.0.0"
}, {
	"issue_title": "ReactDefaultPerf.printWasted()doesn'twork",
	"issue_status": [],
	"release_features_and_fixes": ["Removed extraneous files from npm package. (", " in ", ")", "Ensure ", " is only called once. (", " in ", ")", "Fixed bug resulting in disabled buttons responding to mouse events in IE. (", " in ", ")", "Ensure ", "s are correctly selected when inside ", ". (", " in ", ")", "Restore support for rendering into a shadow root. (", " in ", ")", "Ensure nested ", " elements are caught when warning for invalid markup. (", " in ", ")", "Improve warning when encountering multiple elements with the same key. (", " in ", ")", "Ensure that functional components do not have an owner. (", " in ", ")", "Handle invalid arguments to ", " better. (", " in ", ")", "Ignore DOM operations that occur outside the batch operation. (", " in ", ")", "These files are now shipped inside the React npm package. They have no impact on React core or ReactDOM."],
	"time_difference": 15.068958333333333,
	"release_tag": "v15.0.2"
}, {
	"issue_title": "Bailingoutdoesn'tworkproperlyinlazycomponentswithdefaultprops",
	"issue_status": ["Component: Reconciler", "Type: Bug"],
	"release_features_and_fixes": ["Add ", " and ", " for the ", ". (", " in ", ")", "Build component stacks from native error frames. (", " in ", ")", "Allow to specify ", " on context for improved stacks. (", " in ", ")", "Prevent ", " from leaking in the UMD bundles. (", " in ", ")", "Stop using ", " for redirects. (", " in ", ")", "Delegate events to roots instead of ", ". (", " in ", " and ", ")", "Clean up all effects before running any next effects. (", " in ", ")", "Run ", " cleanup functions asynchronously. (", " in ", ")", "Use browser ", " and ", " for ", " and ", ". (", " in ", ")", "Make all ", " events use the browser capture phase. (", " in ", ")", "Don't emulate bubbling of the ", " event. (", " in ", ")", "Throw if ", " or ", " component returns ", ". (", " in ", ")", "Remove event pooling. (", " in ", ")", "Stop exposing internals that won\u2019t be needed by React Native Web. (", " in ", ")", "Attach all known event listeners when the root mounts. (", " in ", ")", "Disable ", " in the second render pass of DEV mode double render. (", " in ", ")", "Deprecate the undocumented and misleading ", " API. (", " in ", ")", "Rename private field names used in the internals. (", " in ", ")", "Don't call User Timing API in development. (", " in ", ")", "Disable console during the repeated render in Strict Mode. (", " in ", ")", "In Strict Mode, double-render components without Hooks too. (", " in ", ")", "Allow calling ", " during lifecycle methods (but warn). (", " in ", ")", "Add the ", " property to the keyboard event objects. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Warn when no ", " is provided to ", ". (", " in ", ")", "Warn when ", " or ", " components return ", ". (", " in ", ")", "Improve the error message for invalid updates. (", " in ", ")", "Exclude forwardRef and memo from stack frames. (", " in ", ")", "Improve the error message when switching between controlled and uncontrolled inputs. (", " in ", ")", "Keep ", ", ", ", and ", " passive. (", " in ", ")", "Fix ", " hanging in development inside a closed iframe. (", " in ", ")", "Fix rendering bailout for lazy components with ", ". (", " in ", ")", "Fix a false positive warning when ", " is ", ". (", " in ", ")", "Fix Test Utils with non-standard ", " implementation. (", " in ", ")", "Fix ", " reporting an incorrect ", ". (", " in ", ")", "Fix ", " reported as ", " in Firefox. (", " in ", ")", "Fix \"unspecified error\" in IE11. (", " in ", ")", "Fix rendering into a shadow root. (", " in ", ")", "Fix ", " polyfill with capture events. (", " in ", ")", "Use delegation for ", " and ", " events. (", " in ", ")", "Improve memory usage. (", " in ", ")", "Make ", " behavior consistent with ", " for the server renderer. (", " in ", ")", "Fix state leaking when a function component throws. (", " in ", ")", "Improve ", " error message. (", " in ", ")", "Revamp the priority batching heuristics. (", " in ", ")", "Add the ", " prefix before the experimental APIs. (", " in ", ")", "Remove ", " and ", ". (", " in ", ")", "Remove the ", " argument. (", " in ", ")", "Disable ", " prerendering in favor of a different future API. (", " in ", ")", "Add ", " to Suspense for CPU-bound trees. (", " in ", ")", "Add an experimental ", " Hook. (", " in ", ")", "Add an experimental ", " API. (", " in ", ")", "Using ", " in the test renderer no longer flushes Suspense fallbacks. (", " in ", ")", "Use global render timeout for CPU Suspense. (", " in ", ")", "Clear the existing root content before mounting. (", " in ", ")", "Fix a bug with error boundaries. (", " in ", ")", "Fix a bug causing dropped updates in a suspended tree. (", " in ", " and ", ")", "Fix a bug causing dropped render phase updates. (", " in ", ")", "Fix a bug in SuspenseList. (", " in ", ")", "Fix a bug causing Suspense fallback to show too early. (", " in ", ")", "Fix a bug with class components inside SuspenseList. (", " in ", ")", "Fix a bug with inputs that may cause updates to be dropped. (", " in ", " and ", " in ", ")", "Fix a bug causing Suspense fallback to get stuck.  (", " in ", ")", "Don't cut off the tail of a SuspenseList if hydrating. (", " in ", ")", "Fix a bug in ", " that may happen when ", " changes. (", " in ", ")", "Fix a tearing bug in ", ". (", " in ", ")", "Warn if calling setState outside of render but before commit. (", " in ", ")", "react: ", "react-art: ", "react-dom: ", "react-is: ", "react-test-renderer: ", "scheduler: "],
	"time_difference": 195.44876157407407,
	"release_tag": "17.0.0 (October 20, 2020)"
}, {
	"issue_title": "__sourcemakescomponentstacklessuseful",
	"issue_status": ["Type: Discussion"],
	"release_features_and_fixes": ["Add a warning if ", " render function doesn't take exactly two arguments (", " in ", ")", "Improve the error message when passing an element to ", " by mistake (", " in ", ")", "Don't call profiler ", " until after mutations (", " in ", ")", "Add support for React DevTools Profiler (", " in ", ")", "Add ", " entry point alias for profiling in production (", " in ", ")", "Add ", " event for browsers that support it (", " in ", ")", "Add ", " and ", " fields to mouse events (", " in ", ")", "Add ", " and ", " fields to pointer events (", " in ", ")", "Minimally support iframes (nested browsing contexts) in selection event handling (", " in ", ")", "Support passing booleans to the ", " SVG attribute (", " in ", ")", "Ignore ", " on the client when when hydrating (", " in ", ")", "Fix ", " to be treated as a unitless CSS property (", " in ", ")", "Fix incorrect data in ", " event when typing Korean on IE11 (", " in ", ")", "Fix a crash when using dynamic ", " in the ", " tag (", " in ", ", ", " in ", ")", "Fix the ", " attribute not getting initially set on the ", " (", " in ", ")", "Fix hydration of ", " when ", " is not a string (", " in ", ")", "Fix a warning about missing controlled ", " to fire on falsy values too (", " in ", ")", "Fix ", " and ", " buttons getting an empty label (", " in ", ")", "Fix the ", " event not being triggered after drag and drop (", " in ", ")", "Fix the ", " event not working inside a portal on iOS (", " in ", ")", "Fix a performance issue when thousands of roots are re-rendered (", " in ", ")", "Fix a performance regression that also caused ", " to not fire in some cases (", " in ", ")", "Handle errors in more edge cases gracefully (", " in ", " and ", " in ", ")", "Don't use proxies for synthetic events in development (", " in ", ")", "Warn when ", " or ", " is the value of a boolean DOM prop (", " in ", ")", "Warn when ", " is initialized to ", " (", " in ", ")", "Don't compare ", " on hydration in IE due to noisy false positives (", " in ", ")", "Include ", " in the component stack (", " in ", ")", "Don't overwrite ", " in IE (", " in ", ")", "Improve component stack for the ", " naming convention (", " in ", ")", "Improve a warning when using ", " without initialized state (", " in ", ")", "Improve a warning about invalid textarea usage (", " in ", ")", "Treat invalid Symbol and function values more consistently (", " in ", " and ", ")", "Allow Electron ", " tag without warnings (", " in ", ")", "Don't show the uncaught error addendum if ", " was called (", " in ", ")", "Warn about rendering Generators (", " in ", ")", "Remove irrelevant suggestion of a legacy method from a warning (", " in ", ")", "Remove ", " in favor of ", " from ", " (", " in ", ")", "Fix unstable asynchronous mode from doing unnecessary work when an update takes too long (", " in ", ")", "Fix crash with nullish children when using ", " in a selected ", " (", " in ", ")", "Fix crash when ", " is missing (", " in ", ")", "Fix ", " in a functional component for shallow renderer to be ", " (", " in ", ")", "Deprecate a Jest-specific ", " helper (", " in ", ")", "Warn about ", " usage within the test renderer (", " in ", ")", "Improve a confusing error message (", " in ", ")", "Add support for DevTools (", " in ", ")", "New package for cooperatively scheduling work in a browser environment. It's used by React internally, but its public API is not finalized yet. (", " in ", ")"],
	"time_difference": 28.727025462962963,
	"release_tag": "v16.5.0"
}, {
	"issue_title": "SyntheticKeyboardEventshouldsupportKeyboardEvent.code",
	"issue_status": ["Component: DOM", "good first issue (taken)", "Type: Feature Request"],
	"release_features_and_fixes": ["Add ", " and ", " for the ", ". (", " in ", ")", "Build component stacks from native error frames. (", " in ", ")", "Allow to specify ", " on context for improved stacks. (", " in ", ")", "Prevent ", " from leaking in the UMD bundles. (", " in ", ")", "Stop using ", " for redirects. (", " in ", ")", "Delegate events to roots instead of ", ". (", " in ", " and ", ")", "Clean up all effects before running any next effects. (", " in ", ")", "Run ", " cleanup functions asynchronously. (", " in ", ")", "Use browser ", " and ", " for ", " and ", ". (", " in ", ")", "Make all ", " events use the browser capture phase. (", " in ", ")", "Don't emulate bubbling of the ", " event. (", " in ", ")", "Throw if ", " or ", " component returns ", ". (", " in ", ")", "Remove event pooling. (", " in ", ")", "Stop exposing internals that won\u2019t be needed by React Native Web. (", " in ", ")", "Attach all known event listeners when the root mounts. (", " in ", ")", "Disable ", " in the second render pass of DEV mode double render. (", " in ", ")", "Deprecate the undocumented and misleading ", " API. (", " in ", ")", "Rename private field names used in the internals. (", " in ", ")", "Don't call User Timing API in development. (", " in ", ")", "Disable console during the repeated render in Strict Mode. (", " in ", ")", "In Strict Mode, double-render components without Hooks too. (", " in ", ")", "Allow calling ", " during lifecycle methods (but warn). (", " in ", ")", "Add the ", " property to the keyboard event objects. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Warn when no ", " is provided to ", ". (", " in ", ")", "Warn when ", " or ", " components return ", ". (", " in ", ")", "Improve the error message for invalid updates. (", " in ", ")", "Exclude forwardRef and memo from stack frames. (", " in ", ")", "Improve the error message when switching between controlled and uncontrolled inputs. (", " in ", ")", "Keep ", ", ", ", and ", " passive. (", " in ", ")", "Fix ", " hanging in development inside a closed iframe. (", " in ", ")", "Fix rendering bailout for lazy components with ", ". (", " in ", ")", "Fix a false positive warning when ", " is ", ". (", " in ", ")", "Fix Test Utils with non-standard ", " implementation. (", " in ", ")", "Fix ", " reporting an incorrect ", ". (", " in ", ")", "Fix ", " reported as ", " in Firefox. (", " in ", ")", "Fix \"unspecified error\" in IE11. (", " in ", ")", "Fix rendering into a shadow root. (", " in ", ")", "Fix ", " polyfill with capture events. (", " in ", ")", "Use delegation for ", " and ", " events. (", " in ", ")", "Improve memory usage. (", " in ", ")", "Make ", " behavior consistent with ", " for the server renderer. (", " in ", ")", "Fix state leaking when a function component throws. (", " in ", ")", "Improve ", " error message. (", " in ", ")", "Revamp the priority batching heuristics. (", " in ", ")", "Add the ", " prefix before the experimental APIs. (", " in ", ")", "Remove ", " and ", ". (", " in ", ")", "Remove the ", " argument. (", " in ", ")", "Disable ", " prerendering in favor of a different future API. (", " in ", ")", "Add ", " to Suspense for CPU-bound trees. (", " in ", ")", "Add an experimental ", " Hook. (", " in ", ")", "Add an experimental ", " API. (", " in ", ")", "Using ", " in the test renderer no longer flushes Suspense fallbacks. (", " in ", ")", "Use global render timeout for CPU Suspense. (", " in ", ")", "Clear the existing root content before mounting. (", " in ", ")", "Fix a bug with error boundaries. (", " in ", ")", "Fix a bug causing dropped updates in a suspended tree. (", " in ", " and ", ")", "Fix a bug causing dropped render phase updates. (", " in ", ")", "Fix a bug in SuspenseList. (", " in ", ")", "Fix a bug causing Suspense fallback to show too early. (", " in ", ")", "Fix a bug with class components inside SuspenseList. (", " in ", ")", "Fix a bug with inputs that may cause updates to be dropped. (", " in ", " and ", " in ", ")", "Fix a bug causing Suspense fallback to get stuck.  (", " in ", ")", "Don't cut off the tail of a SuspenseList if hydrating. (", " in ", ")", "Fix a bug in ", " that may happen when ", " changes. (", " in ", ")", "Fix a tearing bug in ", ". (", " in ", ")", "Warn if calling setState outside of render but before commit. (", " in ", ")", "react: ", "react-art: ", "react-dom: ", "react-is: ", "react-test-renderer: ", "scheduler: "],
	"time_difference": 199.30584490740742,
	"release_tag": "17.0.0 (October 20, 2020)"
}, {
	"issue_title": "Bug:'usestrict'atgloballevelcausesissueswithscriptsconcatenation.",
	"issue_status": ["Type: Bug", "Type: Discussion"],
	"release_features_and_fixes": ["Add ", " and ", " for the ", ". (", " in ", ")", "Build component stacks from native error frames. (", " in ", ")", "Allow to specify ", " on context for improved stacks. (", " in ", ")", "Prevent ", " from leaking in the UMD bundles. (", " in ", ")", "Stop using ", " for redirects. (", " in ", ")", "Delegate events to roots instead of ", ". (", " in ", " and ", ")", "Clean up all effects before running any next effects. (", " in ", ")", "Run ", " cleanup functions asynchronously. (", " in ", ")", "Use browser ", " and ", " for ", " and ", ". (", " in ", ")", "Make all ", " events use the browser capture phase. (", " in ", ")", "Don't emulate bubbling of the ", " event. (", " in ", ")", "Throw if ", " or ", " component returns ", ". (", " in ", ")", "Remove event pooling. (", " in ", ")", "Stop exposing internals that won\u2019t be needed by React Native Web. (", " in ", ")", "Attach all known event listeners when the root mounts. (", " in ", ")", "Disable ", " in the second render pass of DEV mode double render. (", " in ", ")", "Deprecate the undocumented and misleading ", " API. (", " in ", ")", "Rename private field names used in the internals. (", " in ", ")", "Don't call User Timing API in development. (", " in ", ")", "Disable console during the repeated render in Strict Mode. (", " in ", ")", "In Strict Mode, double-render components without Hooks too. (", " in ", ")", "Allow calling ", " during lifecycle methods (but warn). (", " in ", ")", "Add the ", " property to the keyboard event objects. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Warn when no ", " is provided to ", ". (", " in ", ")", "Warn when ", " or ", " components return ", ". (", " in ", ")", "Improve the error message for invalid updates. (", " in ", ")", "Exclude forwardRef and memo from stack frames. (", " in ", ")", "Improve the error message when switching between controlled and uncontrolled inputs. (", " in ", ")", "Keep ", ", ", ", and ", " passive. (", " in ", ")", "Fix ", " hanging in development inside a closed iframe. (", " in ", ")", "Fix rendering bailout for lazy components with ", ". (", " in ", ")", "Fix a false positive warning when ", " is ", ". (", " in ", ")", "Fix Test Utils with non-standard ", " implementation. (", " in ", ")", "Fix ", " reporting an incorrect ", ". (", " in ", ")", "Fix ", " reported as ", " in Firefox. (", " in ", ")", "Fix \"unspecified error\" in IE11. (", " in ", ")", "Fix rendering into a shadow root. (", " in ", ")", "Fix ", " polyfill with capture events. (", " in ", ")", "Use delegation for ", " and ", " events. (", " in ", ")", "Improve memory usage. (", " in ", ")", "Make ", " behavior consistent with ", " for the server renderer. (", " in ", ")", "Fix state leaking when a function component throws. (", " in ", ")", "Improve ", " error message. (", " in ", ")", "Revamp the priority batching heuristics. (", " in ", ")", "Add the ", " prefix before the experimental APIs. (", " in ", ")", "Remove ", " and ", ". (", " in ", ")", "Remove the ", " argument. (", " in ", ")", "Disable ", " prerendering in favor of a different future API. (", " in ", ")", "Add ", " to Suspense for CPU-bound trees. (", " in ", ")", "Add an experimental ", " Hook. (", " in ", ")", "Add an experimental ", " API. (", " in ", ")", "Using ", " in the test renderer no longer flushes Suspense fallbacks. (", " in ", ")", "Use global render timeout for CPU Suspense. (", " in ", ")", "Clear the existing root content before mounting. (", " in ", ")", "Fix a bug with error boundaries. (", " in ", ")", "Fix a bug causing dropped updates in a suspended tree. (", " in ", " and ", ")", "Fix a bug causing dropped render phase updates. (", " in ", ")", "Fix a bug in SuspenseList. (", " in ", ")", "Fix a bug causing Suspense fallback to show too early. (", " in ", ")", "Fix a bug with class components inside SuspenseList. (", " in ", ")", "Fix a bug with inputs that may cause updates to be dropped. (", " in ", " and ", " in ", ")", "Fix a bug causing Suspense fallback to get stuck.  (", " in ", ")", "Don't cut off the tail of a SuspenseList if hydrating. (", " in ", ")", "Fix a bug in ", " that may happen when ", " changes. (", " in ", ")", "Fix a tearing bug in ", ". (", " in ", ")", "Warn if calling setState outside of render but before commit. (", " in ", ")", "react: ", "react-art: ", "react-dom: ", "react-is: ", "react-test-renderer: ", "scheduler: "],
	"time_difference": 66.29329861111111,
	"release_tag": "17.0.0 (October 20, 2020)"
}, {
	"issue_title": "Bug:event.preventDefaultiswreckinghavocwithstartTransition",
	"issue_status": ["Component: Concurrent Features", "Type: Bug"],
	"release_features_and_fixes": ["Add ", " and ", " for the ", ". (", " in ", ")", "Build component stacks from native error frames. (", " in ", ")", "Allow to specify ", " on context for improved stacks. (", " in ", ")", "Prevent ", " from leaking in the UMD bundles. (", " in ", ")", "Stop using ", " for redirects. (", " in ", ")", "Delegate events to roots instead of ", ". (", " in ", " and ", ")", "Clean up all effects before running any next effects. (", " in ", ")", "Run ", " cleanup functions asynchronously. (", " in ", ")", "Use browser ", " and ", " for ", " and ", ". (", " in ", ")", "Make all ", " events use the browser capture phase. (", " in ", ")", "Don't emulate bubbling of the ", " event. (", " in ", ")", "Throw if ", " or ", " component returns ", ". (", " in ", ")", "Remove event pooling. (", " in ", ")", "Stop exposing internals that won\u2019t be needed by React Native Web. (", " in ", ")", "Attach all known event listeners when the root mounts. (", " in ", ")", "Disable ", " in the second render pass of DEV mode double render. (", " in ", ")", "Deprecate the undocumented and misleading ", " API. (", " in ", ")", "Rename private field names used in the internals. (", " in ", ")", "Don't call User Timing API in development. (", " in ", ")", "Disable console during the repeated render in Strict Mode. (", " in ", ")", "In Strict Mode, double-render components without Hooks too. (", " in ", ")", "Allow calling ", " during lifecycle methods (but warn). (", " in ", ")", "Add the ", " property to the keyboard event objects. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Warn when no ", " is provided to ", ". (", " in ", ")", "Warn when ", " or ", " components return ", ". (", " in ", ")", "Improve the error message for invalid updates. (", " in ", ")", "Exclude forwardRef and memo from stack frames. (", " in ", ")", "Improve the error message when switching between controlled and uncontrolled inputs. (", " in ", ")", "Keep ", ", ", ", and ", " passive. (", " in ", ")", "Fix ", " hanging in development inside a closed iframe. (", " in ", ")", "Fix rendering bailout for lazy components with ", ". (", " in ", ")", "Fix a false positive warning when ", " is ", ". (", " in ", ")", "Fix Test Utils with non-standard ", " implementation. (", " in ", ")", "Fix ", " reporting an incorrect ", ". (", " in ", ")", "Fix ", " reported as ", " in Firefox. (", " in ", ")", "Fix \"unspecified error\" in IE11. (", " in ", ")", "Fix rendering into a shadow root. (", " in ", ")", "Fix ", " polyfill with capture events. (", " in ", ")", "Use delegation for ", " and ", " events. (", " in ", ")", "Improve memory usage. (", " in ", ")", "Make ", " behavior consistent with ", " for the server renderer. (", " in ", ")", "Fix state leaking when a function component throws. (", " in ", ")", "Improve ", " error message. (", " in ", ")", "Revamp the priority batching heuristics. (", " in ", ")", "Add the ", " prefix before the experimental APIs. (", " in ", ")", "Remove ", " and ", ". (", " in ", ")", "Remove the ", " argument. (", " in ", ")", "Disable ", " prerendering in favor of a different future API. (", " in ", ")", "Add ", " to Suspense for CPU-bound trees. (", " in ", ")", "Add an experimental ", " Hook. (", " in ", ")", "Add an experimental ", " API. (", " in ", ")", "Using ", " in the test renderer no longer flushes Suspense fallbacks. (", " in ", ")", "Use global render timeout for CPU Suspense. (", " in ", ")", "Clear the existing root content before mounting. (", " in ", ")", "Fix a bug with error boundaries. (", " in ", ")", "Fix a bug causing dropped updates in a suspended tree. (", " in ", " and ", ")", "Fix a bug causing dropped render phase updates. (", " in ", ")", "Fix a bug in SuspenseList. (", " in ", ")", "Fix a bug causing Suspense fallback to show too early. (", " in ", ")", "Fix a bug with class components inside SuspenseList. (", " in ", ")", "Fix a bug with inputs that may cause updates to be dropped. (", " in ", " and ", " in ", ")", "Fix a bug causing Suspense fallback to get stuck.  (", " in ", ")", "Don't cut off the tail of a SuspenseList if hydrating. (", " in ", ")", "Fix a bug in ", " that may happen when ", " changes. (", " in ", ")", "Fix a tearing bug in ", ". (", " in ", ")", "Warn if calling setState outside of render but before commit. (", " in ", ")", "react: ", "react-art: ", "react-dom: ", "react-is: ", "react-test-renderer: ", "scheduler: "],
	"time_difference": 196.0072800925926,
	"release_tag": "17.0.0 (October 20, 2020)"
}, {
	"issue_title": "Warnonaccessof",
	"issue_status": ["Difficulty: starter"],
	"release_features_and_fixes": [" Previously we would generate a large string of HTML and then set ", ". At the time, this was decided to be faster than using ", " for the majority of cases and browsers that we supported. Browsers have continued to improve and so overwhelmingly this is no longer true. By using ", " we can make other parts of React faster. (", " in ", ")", " As a result of using ", ", we can prime the node cache as we create DOM nodes, allowing us to skip a potential lookup (which used the ", " attribute). Root nodes will have a ", " attribute and server generated markup will still contain ", ". (", " in ", ")", " ReactDOM will now render plain text nodes interspersed with comment nodes that are used for demarcation. This gives us the same ability to update individual pieces of text, without creating extra nested nodes. If you were targeting these ", "s in your CSS, you will need to adjust accordingly. You can always render them explicitly in your components. (", " in ", ")", " Previously ", " would render to ", " elements. We now use comment nodes. This may cause issues if making use of ", " CSS selectors. While we consider this rendering behavior an implementation detail of React, it's worth noting the potential problem. ()", " in ", ")", " We added support for ", " in React 0.14. However, React 0.14 still allowed you to define a class component without extending ", " or using ", ", so ", ", and did not allow returning ", " from it. This issue is solved in React 15, and you can now return ", " from any component, whether it is a class or a function. (", " in ", ")", " All SVG tags are now fully supported. (Uncommon SVG tags are not present on the ", " element helper, but JSX and ", " work on all tag names.) All SVG attributes that are implemented by the browsers should be supported too. If you find any attributes that we have missed, please ", ". (", " in ", ")", " We fixed a bug in ", " that some components may rely on. If some of the ", " received by ", " are ", ", it used to return an element with ", " values for those props. We\u2019re changing it to be consistent with ", ". Now any ", " props passed to ", " are resolved to the corresponding component\u2019s ", ". (", " in ", ")", " This change won\u2019t affect applications but may break some third-party tools. We are ", " and plan to release it during the 15.x cycle. The internal performance measurement format is subject to change so, for the time being, we consider the return value of ", " an opaque data structure that should not be relied upon. (", " in ", ")", "Deprecated APIs are removed from the ", " top-level export: ", ", ", ", ", ", ", ", and ", ". As a reminder, they are now available on ", " and ", ". (", " in ", ")", "Deprecated addons are removed: ", " and ", ". (", " in ", ", ", " in ", ")", "Deprecated component instance methods are removed: ", ", ", ", and ", ". (", " in ", ")", "Deprecated CommonJS ", " entry point is removed. As a reminder, you should use separate ", " packages instead. This only applies if you use the CommonJS builds. (", " in ", ")", "Passing ", " to void elements like ", " was deprecated, and now throws an error. (", " in ", ")", "React-specific properties on DOM ", " (e.g. ", ") were deprecated, and are removed now. (", " in ", ")", " and ", " are now deprecated due to very low popularity. If you need this, you can use a wrapper component that implements the same behavior: ", ". (", " in ", ")", "Future versions of React will treat ", " as a request to clear the input. However, React 0.14 has been ignoring ", ". React 15 warns you on a ", " input value and offers you to clarify your intention. To fix the warning, you may explicitly pass an empty string to clear a controlled input, or pass ", " to make the input uncontrolled. (", " in ", ")", " was renamed to ", ", and ", " was renamed to ", ". (", " in ", ")", "If you use a minified copy of the ", " build, React DOM kindly encourages you to use the faster production build instead. (", " in ", ")", "React DOM: When specifying a unit-less CSS value as a string, a future version will not add ", " automatically. This version now warns in this case (ex: writing ", ". Unitless ", " values like ", " are unchanged. (", " in ", ")", "Synthetic Events will now warn when setting and accessing properties (which will not get cleared appropriately), as well as warn on access after an event has been returned to the pool. (", " in ", " and ", " in ", ")", "Elements will now warn when attempting to read ", " and ", " from the props. (", " in ", ")", "React will now warn if you pass a different ", " object to ", " in the constructor. (", " in ", ")", "React will now warn if you call ", " inside ", ". (", " in ", ")", "React DOM now attempts to warn for mistyped event handlers on DOM elements, such as ", " which should be ", ". (", " in ", ")", "React DOM now warns about ", " values in ", ". (", " in ", ")", "React DOM now warns if you specify both ", " and ", " for an input. (", " in ", ")", "React DOM now warns if an input switches between being controlled and uncontrolled. (", " in ", ")", "React DOM now warns if you specify ", " or ", " handlers as they are unnecessary in React. (", " in ", ")", "React now prints a descriptive error message when you pass an invalid callback as the last argument to ", ", ", ", or ", ". (", " in ", " and ", " in ", ")", "Add-Ons: ", " now prints a helpful message if you attempt to use it with shallow rendering. (", " in ", ")", "PropTypes: ", " and ", " provide better error messages for invalid arguments. (", " in ", ")", "Fixed multiple small memory leaks. (", " in ", " and ", " in ", ")", "Input events are handled more reliably in IE 10 and IE 11; spurious events no longer fire when using a placeholder. (", " in ", ")", "The ", " lifecycle method is now consistently called when ", " changes. (", " in ", ")", " doesn\u2019t append slash to an existing ", " when used inside ", ". (", " in ", ")", "React DOM now supports the ", " and ", " HTML attributes. (", " in ", " and ", " in ", ")", "React DOM now supports ", ", ", " and ", " CSS properties. (", " in ", " and  ", " in ", ")", "React DOM now correctly handles ", ", ", ", ", ", ", ", ", ", and ", " as unitless CSS properties. (", " in ", " and ", ")", "React DOM now supports the ", ", ", ", ", ", ", ", and ", " events. Support for ", " has been added to ", " elements. (", " in ", ",  ", " in ", ", and ", " in ", ")", "React DOM now defaults to using DOM attributes instead of properties, which fixes a few edge case bugs. Additionally the nullification of values (ex: ", ") now results in the forceful removal, no longer trying to set to the default value used by browsers in the absence of a value. (", " in ", ")", "React DOM does not mistakingly coerce ", " to strings for Web Components. (", " in ", ")", "React DOM now correctly normalizes SVG ", " events. (", " in ", ")", "React DOM does not throw if a ", " is unmounted while its ", " handler is executing. (", " in ", ")", "React DOM does not throw in Windows 8 apps. (", " in ", ")", "React DOM does not throw when asynchronously unmounting a child with a ", ". (", " in ", ")", "React DOM no longer forces synchronous layout because of scroll position tracking. (", " in ", ")", " is used in a number of places to compare values, which leads to fewer false positives, especially involving ", ". In particular, this affects the ", " add-on. (", " in ", ")", "Add-Ons: ReactPerf no longer instruments adding or removing an event listener because they don\u2019t really touch the DOM due to event delegation. (", " in ", ")", "React now uses ", " instead of ", " so it installs less transitive dependencies. (", " in ", ")", "Shallow renderer now exposes ", ". (", " in ", ")", "Shallow renderer now returns the rendered output from ", ". (", " in ", ")", "React no longer depends on ES5 ", " for ", " and ", " in older environments. It still, however, requires ES5 ", " in those environments. (", " in ", ")", "React DOM now allows ", " attributes with names that start with numbers. (", " in ", ")", "React DOM adds a new ", " prop for components like ", " that intentionally manage ", " children with React. (", " in ", ")", "React improves the performance for ", " on complex specs. (", " in ", ")"],
	"time_difference": 51.91246527777778,
	"release_tag": "v15.0.0"
}, {
	"issue_title": "ServerRenderingSVGforeignObjectbodytagw15rc2resultsinmissingIDerror",
	"issue_status": ["Difficulty: starter", "SVG"],
	"release_features_and_fixes": ["Removed extraneous files from npm package. (", " in ", ")", "Ensure ", " is only called once. (", " in ", ")", "Fixed bug resulting in disabled buttons responding to mouse events in IE. (", " in ", ")", "Ensure ", "s are correctly selected when inside ", ". (", " in ", ")", "Restore support for rendering into a shadow root. (", " in ", ")", "Ensure nested ", " elements are caught when warning for invalid markup. (", " in ", ")", "Improve warning when encountering multiple elements with the same key. (", " in ", ")", "Ensure that functional components do not have an owner. (", " in ", ")", "Handle invalid arguments to ", " better. (", " in ", ")", "Ignore DOM operations that occur outside the batch operation. (", " in ", ")", "These files are now shipped inside the React npm package. They have no impact on React core or ReactDOM."],
	"time_difference": 14.969016203703704,
	"release_tag": "v15.0.2"
}, {
	"issue_title": "CallallfunctionstwiceinStrictMode",
	"issue_status": ["Type: Enhancement"],
	"release_features_and_fixes": ["Add ", " and ", " for the ", ". (", " in ", ")", "Build component stacks from native error frames. (", " in ", ")", "Allow to specify ", " on context for improved stacks. (", " in ", ")", "Prevent ", " from leaking in the UMD bundles. (", " in ", ")", "Stop using ", " for redirects. (", " in ", ")", "Delegate events to roots instead of ", ". (", " in ", " and ", ")", "Clean up all effects before running any next effects. (", " in ", ")", "Run ", " cleanup functions asynchronously. (", " in ", ")", "Use browser ", " and ", " for ", " and ", ". (", " in ", ")", "Make all ", " events use the browser capture phase. (", " in ", ")", "Don't emulate bubbling of the ", " event. (", " in ", ")", "Throw if ", " or ", " component returns ", ". (", " in ", ")", "Remove event pooling. (", " in ", ")", "Stop exposing internals that won\u2019t be needed by React Native Web. (", " in ", ")", "Attach all known event listeners when the root mounts. (", " in ", ")", "Disable ", " in the second render pass of DEV mode double render. (", " in ", ")", "Deprecate the undocumented and misleading ", " API. (", " in ", ")", "Rename private field names used in the internals. (", " in ", ")", "Don't call User Timing API in development. (", " in ", ")", "Disable console during the repeated render in Strict Mode. (", " in ", ")", "In Strict Mode, double-render components without Hooks too. (", " in ", ")", "Allow calling ", " during lifecycle methods (but warn). (", " in ", ")", "Add the ", " property to the keyboard event objects. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Add the ", " property for ", " elements. (", " in ", ")", "Warn when no ", " is provided to ", ". (", " in ", ")", "Warn when ", " or ", " components return ", ". (", " in ", ")", "Improve the error message for invalid updates. (", " in ", ")", "Exclude forwardRef and memo from stack frames. (", " in ", ")", "Improve the error message when switching between controlled and uncontrolled inputs. (", " in ", ")", "Keep ", ", ", ", and ", " passive. (", " in ", ")", "Fix ", " hanging in development inside a closed iframe. (", " in ", ")", "Fix rendering bailout for lazy components with ", ". (", " in ", ")", "Fix a false positive warning when ", " is ", ". (", " in ", ")", "Fix Test Utils with non-standard ", " implementation. (", " in ", ")", "Fix ", " reporting an incorrect ", ". (", " in ", ")", "Fix ", " reported as ", " in Firefox. (", " in ", ")", "Fix \"unspecified error\" in IE11. (", " in ", ")", "Fix rendering into a shadow root. (", " in ", ")", "Fix ", " polyfill with capture events. (", " in ", ")", "Use delegation for ", " and ", " events. (", " in ", ")", "Improve memory usage. (", " in ", ")", "Make ", " behavior consistent with ", " for the server renderer. (", " in ", ")", "Fix state leaking when a function component throws. (", " in ", ")", "Improve ", " error message. (", " in ", ")", "Revamp the priority batching heuristics. (", " in ", ")", "Add the ", " prefix before the experimental APIs. (", " in ", ")", "Remove ", " and ", ". (", " in ", ")", "Remove the ", " argument. (", " in ", ")", "Disable ", " prerendering in favor of a different future API. (", " in ", ")", "Add ", " to Suspense for CPU-bound trees. (", " in ", ")", "Add an experimental ", " Hook. (", " in ", ")", "Add an experimental ", " API. (", " in ", ")", "Using ", " in the test renderer no longer flushes Suspense fallbacks. (", " in ", ")", "Use global render timeout for CPU Suspense. (", " in ", ")", "Clear the existing root content before mounting. (", " in ", ")", "Fix a bug with error boundaries. (", " in ", ")", "Fix a bug causing dropped updates in a suspended tree. (", " in ", " and ", ")", "Fix a bug causing dropped render phase updates. (", " in ", ")", "Fix a bug in SuspenseList. (", " in ", ")", "Fix a bug causing Suspense fallback to show too early. (", " in ", ")", "Fix a bug with class components inside SuspenseList. (", " in ", ")", "Fix a bug with inputs that may cause updates to be dropped. (", " in ", " and ", " in ", ")", "Fix a bug causing Suspense fallback to get stuck.  (", " in ", ")", "Don't cut off the tail of a SuspenseList if hydrating. (", " in ", ")", "Fix a bug in ", " that may happen when ", " changes. (", " in ", ")", "Fix a tearing bug in ", ". (", " in ", ")", "Warn if calling setState outside of render but before commit. (", " in ", ")", "react: ", "react-art: ", "react-dom: ", "react-is: ", "react-test-renderer: ", "scheduler: "],
	"time_difference": 204.93847222222223,
	"release_tag": "17.0.0 (October 20, 2020)"
}, {
	"issue_title": "contextdoesnotupdateusing",
	"issue_status": [],
	"release_features_and_fixes": ["Fix errant warning about missing React element. (", " in ", ")", "Better removal of dev-only code, leading to a small reduction in the minified production bundle size. (", " in ", ", ", ")", "Add stack trace to null input value warning. (", " in ", ")", "Fix webcomponents example. (", " in ", ")", "Fix ", " so that context properly updates when linked to state. (", " in ", ")", "Improve invariant wording for void elements. (", " in ", ")", "Ensure no errors are thrown due to event handlers in server rendering. (", " in ", ")", "Fix regression resulting in ", "-less submit and reset inputs removing the browser-default text. (", " in ", ")", "Fix regression resulting in empty ", " attribute being added to inputs when not provided. (", " in ", ")", "Fix issue with nested server rendering. (", " in ", ")", "Make ", " work properly during lifecycle methods. (", " in ", ").", "Fix issue resulting in spurious unknown property warnings. (", " in ", ")", "Improve error handling in cross-platform touch event handling. (", " in ", ")"],
	"time_difference": 11.01099537037037,
	"release_tag": "v15.2.1"
}, {
	"issue_title": "react-dom17breaksoninternetexplorer",
	"issue_status": ["Component: Reconciler", "Type: Bug"],
	"release_features_and_fixes": ["Fix a crash in IE11. (", " in ", ")"],
	"time_difference": 152.40418981481483,
	"release_tag": "17.0.1 (October 14, 2020)"
}, {
	"issue_title": "InReact16,onMouseEnteristriggeredanextratimewhenenteringanewchild",
	"issue_status": ["Type: Bug"],
	"release_features_and_fixes": ["Fix an accidental extra global variable in the UMD builds. (", " in ", ")", "Add support for portals in ", " utilities. (", " in ", ")", "Warn when a class has a ", " method but doesn't extend a known base class. (", " in ", ")", "Improve the warning when accidentally returning an object from constructor. (", " in ", ")", "Allow ", " as a custom attribute for AMP. (", " in ", ")", "Fix ", " and ", " firing on wrong elements. (", " in ", ")", "Fix ", " showing up in a warning instead of the component stack. (", " in ", ")", "Fix IE11 crash in development mode. (", " in ", ")", "Fix ", " not getting applied to SVG elements. (", " in ", ")", "Fix SVG children not getting cleaned up on ", " in IE. (", " in ", ")", "Fix false positive text mismatch warning caused by newline normalization. (", " in ", ")", "Fix ", " to respect ", " on uncontrolled ", ". (", " in ", ")", "Fix ", " placeholder not rendering on IE11. (", " in ", ")", "Fix a crash rendering into shadow root. (", " in ", ")", "Fix false positive warning about hydrating mixed case SVG tags. (", " in ", ")", "Suppress the new unknown tag warning for ", " element. (", " in ", ")", "Warn when defining a non-existent ", " method. (", " in ", ")", "Warn about function child no more than once. (", " in ", ")", "Warn about nested updates no more than once. (", " in ", ")", "Deduplicate other warnings about updates. (", " in ", ")", "Include component stack into the warning about ", " and ", ". (", " in ", ")", "Improve the warning about booleans passed to event handlers. (", " in ", ")", "Improve the warning when a multiple ", " gets null ", ". (", " in ", ")", "Move link in the warning message to avoid redirect. (", " in ", ")", "Add a way to suppress the React DevTools installation prompt. (", " in ", ")", "Remove unused code. (", " in ", ", ", ")", "Add a new ", " attribute for intentional client/server text mismatches. (", " in ", ")", "Fix markup generation when components return strings. (", " in ", ")", "Fix obscure error message when passing an invalid style value. (", " in ", ")", "Include the ", " attribute into SSR markup. (", " in ", ")", "Include the component stack into more warnings. (", " in ", ")", "Fix multiple ", " calls in ", " in shallow renderer. (", " in ", ")", "Fix shallow renderer to ignore ", " after ", ". (", " in ", " and ", ")", "Handle ", " and ", " correctly. (", " in ", ")", "Add back support for running in production mode. (", " in ", ")", "Add a missing ", " dependency. (", " in ", ")", "Add a missing ", " dependency. (", " in ", ")", "Expose ", ", ", ", and ", ". (", " in ", ")", "First release of the ", " for creating custom renderers. (", " in ", ")", "Add support for React DevTools. (", " in ", ")", "First release of the ", " for parent-child communication. (", " in ", ")"],
	"time_difference": 30.82435185185185,
	"release_tag": "v16.1.0"
}, {
	"issue_title": "DidnotexpectcomponentDidMounttimertostartwhilerendertimerisstillinprogressforanotherinstance",
	"issue_status": [],
	"release_features_and_fixes": ["Remove plain object warning from React.createElement & React.cloneElement. (", " in ", ")", "Add ", " to supported HTML attributes. (", " in ", ")", "Add ", " to supported HTML attributes. (", " in ", ")", "Improve DOM nesting validation warning about whitespace. (", " in ", ")", "Avoid \"Member not found\" exception in IE10 when calling ", " in Synthetic Events. (", " in ", ")", "Fix memory leak in ", " implementation. (", " in ", ")", "Improve robustness of ", " checks to handle Google Tag Manager. (", " in ", ")", "Add more cases to controlled inputs warning. (", " in ", ")", "Handle case of popup blockers overriding ", ". (", " in ", ")", "Fix issue with ", " and SVG in Internet Explorer. (", " in ", ")", "Improve handling of Japanese IME on Internet Explorer. (", " in ", ")", "Support error boundaries. (", " in ", ", ", ", ", ")", "Skip null ref warning. (", " in ", ")", "Ensure lifecycle timers are stopped on errors. (", " in ", ")"],
	"time_difference": 25.983252314814816,
	"release_tag": "v15.3.2"
}, {
	"issue_title": "Warnwhenaninputswitchesbetweencontrolledanduncontrolled",
	"issue_status": ["Difficulty: starter"],
	"release_features_and_fixes": [" Previously we would generate a large string of HTML and then set ", ". At the time, this was decided to be faster than using ", " for the majority of cases and browsers that we supported. Browsers have continued to improve and so overwhelmingly this is no longer true. By using ", " we can make other parts of React faster. (", " in ", ")", " As a result of using ", ", we can prime the node cache as we create DOM nodes, allowing us to skip a potential lookup (which used the ", " attribute). Root nodes will have a ", " attribute and server generated markup will still contain ", ". (", " in ", ")", " ReactDOM will now render plain text nodes interspersed with comment nodes that are used for demarcation. This gives us the same ability to update individual pieces of text, without creating extra nested nodes. If you were targeting these ", "s in your CSS, you will need to adjust accordingly. You can always render them explicitly in your components. (", " in ", ")", " Previously ", " would render to ", " elements. We now use comment nodes. This may cause issues if making use of ", " CSS selectors. While we consider this rendering behavior an implementation detail of React, it's worth noting the potential problem. ()", " in ", ")", " We added support for ", " in React 0.14. However, React 0.14 still allowed you to define a class component without extending ", " or using ", ", so ", ", and did not allow returning ", " from it. This issue is solved in React 15, and you can now return ", " from any component, whether it is a class or a function. (", " in ", ")", " All SVG tags are now fully supported. (Uncommon SVG tags are not present on the ", " element helper, but JSX and ", " work on all tag names.) All SVG attributes that are implemented by the browsers should be supported too. If you find any attributes that we have missed, please ", ". (", " in ", ")", " We fixed a bug in ", " that some components may rely on. If some of the ", " received by ", " are ", ", it used to return an element with ", " values for those props. We\u2019re changing it to be consistent with ", ". Now any ", " props passed to ", " are resolved to the corresponding component\u2019s ", ". (", " in ", ")", " This change won\u2019t affect applications but may break some third-party tools. We are ", " and plan to release it during the 15.x cycle. The internal performance measurement format is subject to change so, for the time being, we consider the return value of ", " an opaque data structure that should not be relied upon. (", " in ", ")", "Deprecated APIs are removed from the ", " top-level export: ", ", ", ", ", ", ", ", and ", ". As a reminder, they are now available on ", " and ", ". (", " in ", ")", "Deprecated addons are removed: ", " and ", ". (", " in ", ", ", " in ", ")", "Deprecated component instance methods are removed: ", ", ", ", and ", ". (", " in ", ")", "Deprecated CommonJS ", " entry point is removed. As a reminder, you should use separate ", " packages instead. This only applies if you use the CommonJS builds. (", " in ", ")", "Passing ", " to void elements like ", " was deprecated, and now throws an error. (", " in ", ")", "React-specific properties on DOM ", " (e.g. ", ") were deprecated, and are removed now. (", " in ", ")", " and ", " are now deprecated due to very low popularity. If you need this, you can use a wrapper component that implements the same behavior: ", ". (", " in ", ")", "Future versions of React will treat ", " as a request to clear the input. However, React 0.14 has been ignoring ", ". React 15 warns you on a ", " input value and offers you to clarify your intention. To fix the warning, you may explicitly pass an empty string to clear a controlled input, or pass ", " to make the input uncontrolled. (", " in ", ")", " was renamed to ", ", and ", " was renamed to ", ". (", " in ", ")", "If you use a minified copy of the ", " build, React DOM kindly encourages you to use the faster production build instead. (", " in ", ")", "React DOM: When specifying a unit-less CSS value as a string, a future version will not add ", " automatically. This version now warns in this case (ex: writing ", ". Unitless ", " values like ", " are unchanged. (", " in ", ")", "Synthetic Events will now warn when setting and accessing properties (which will not get cleared appropriately), as well as warn on access after an event has been returned to the pool. (", " in ", " and ", " in ", ")", "Elements will now warn when attempting to read ", " and ", " from the props. (", " in ", ")", "React will now warn if you pass a different ", " object to ", " in the constructor. (", " in ", ")", "React will now warn if you call ", " inside ", ". (", " in ", ")", "React DOM now attempts to warn for mistyped event handlers on DOM elements, such as ", " which should be ", ". (", " in ", ")", "React DOM now warns about ", " values in ", ". (", " in ", ")", "React DOM now warns if you specify both ", " and ", " for an input. (", " in ", ")", "React DOM now warns if an input switches between being controlled and uncontrolled. (", " in ", ")", "React DOM now warns if you specify ", " or ", " handlers as they are unnecessary in React. (", " in ", ")", "React now prints a descriptive error message when you pass an invalid callback as the last argument to ", ", ", ", or ", ". (", " in ", " and ", " in ", ")", "Add-Ons: ", " now prints a helpful message if you attempt to use it with shallow rendering. (", " in ", ")", "PropTypes: ", " and ", " provide better error messages for invalid arguments. (", " in ", ")", "Fixed multiple small memory leaks. (", " in ", " and ", " in ", ")", "Input events are handled more reliably in IE 10 and IE 11; spurious events no longer fire when using a placeholder. (", " in ", ")", "The ", " lifecycle method is now consistently called when ", " changes. (", " in ", ")", " doesn\u2019t append slash to an existing ", " when used inside ", ". (", " in ", ")", "React DOM now supports the ", " and ", " HTML attributes. (", " in ", " and ", " in ", ")", "React DOM now supports ", ", ", " and ", " CSS properties. (", " in ", " and  ", " in ", ")", "React DOM now correctly handles ", ", ", ", ", ", ", ", ", ", and ", " as unitless CSS properties. (", " in ", " and ", ")", "React DOM now supports the ", ", ", ", ", ", ", ", and ", " events. Support for ", " has been added to ", " elements. (", " in ", ",  ", " in ", ", and ", " in ", ")", "React DOM now defaults to using DOM attributes instead of properties, which fixes a few edge case bugs. Additionally the nullification of values (ex: ", ") now results in the forceful removal, no longer trying to set to the default value used by browsers in the absence of a value. (", " in ", ")", "React DOM does not mistakingly coerce ", " to strings for Web Components. (", " in ", ")", "React DOM now correctly normalizes SVG ", " events. (", " in ", ")", "React DOM does not throw if a ", " is unmounted while its ", " handler is executing. (", " in ", ")", "React DOM does not throw in Windows 8 apps. (", " in ", ")", "React DOM does not throw when asynchronously unmounting a child with a ", ". (", " in ", ")", "React DOM no longer forces synchronous layout because of scroll position tracking. (", " in ", ")", " is used in a number of places to compare values, which leads to fewer false positives, especially involving ", ". In particular, this affects the ", " add-on. (", " in ", ")", "Add-Ons: ReactPerf no longer instruments adding or removing an event listener because they don\u2019t really touch the DOM due to event delegation. (", " in ", ")", "React now uses ", " instead of ", " so it installs less transitive dependencies. (", " in ", ")", "Shallow renderer now exposes ", ". (", " in ", ")", "Shallow renderer now returns the rendered output from ", ". (", " in ", ")", "React no longer depends on ES5 ", " for ", " and ", " in older environments. It still, however, requires ES5 ", " in those environments. (", " in ", ")", "React DOM now allows ", " attributes with names that start with numbers. (", " in ", ")", "React DOM adds a new ", " prop for components like ", " that intentionally manage ", " children with React. (", " in ", ")", "React improves the performance for ", " on complex specs. (", " in ", ")"],
	"time_difference": 55.64618055555555,
	"release_tag": "v15.0.0"
}]